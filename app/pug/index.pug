extends layouts/_main

block variables
    //- put your vars here
    - var pageTitle= 'Code Challenges'

block content
    main(class="main")
         div(class="container")
            section(class="hero")
                div(class="hero__description")
                    h1(class="page__title") Code Challenges
                    p(class="hero__text") Explore various front-end coding challenges made by me and my coder friends. 
                    p(class="hero__text") The major goal is to create solutions to the most common tasks at <abbr title="JavaScript">JS</abbr> interviews. In addition, I decided to share some of personal code tasks, gists and snippets for <abbr title="HyperText Markup Language">HTML</abbr> and <abbr title="Cascading Style Sheets">CSS</abbr> that I constantly use. Also you can find there different <abbr title="Cascading Style Sheets">CSS</abbr> animations, effects and styling components.
                    p(class="hero__text") Hope you'll enjoy this stuff, let's go!

            section(class="challenges")
                h2(class="visually-hidden") Challenges List
                header(class="challenges__description")
                    ul(class="hero__list filter")
                        li(class="filter__item"): button(class="filter__button filter__button--all active" type="button") All
                        li(class="filter__item"): button(class="filter__button filter__button--javascript" type="button") JavaScript                    
                        li(class="filter__item"): button(class="filter__button filter__button--animations" type="button") <abbr title="Cascading Style Sheets">CSS Inspiration</abbr>
                ul(class="challenges__container")
                    +challenge("FizzBuzz", "javascript", "fizzbuzz")
                        block challengeFizzBuzz
                            +code("FizzBuzz", "fizzbuzz")
                                block codeFizzBuzz
                                    div(class="code__info") 
                                        p(class="code__text") The «FizzBuzz test» is an interview question designed to help filter out the 99.5% of programming job candidates who can't seem to program their way out of a wet paper bag. The text of the programming assignment is as follows:
                                        blockquote(class="blockquote") "Write a program that prints the numbers from 1 to 100. But for multiples of three print «Fizz» instead of the number and for the multiples of five print «Buzz». For numbers which are multiples of both three and five print «FizzBuzz»." <footer><cite>&copy; Some tech specialist at interview</cite></footer>
                                        p(class="code__text") I think FizzBuzz is «hard» for some programmers because (#1) it doesn't fit into any of the patterns that were given to them in school assignments, and (#2) it isn't possible to directly and simply represent the necessary tests, without duplication, in just about any commonly-used modern programming language.
                                        p(class="code__text") On #1, that it doesn't match the patterns they memorized from lectures and class assignments: I think this makes it a good discriminator, because employer wishes to hire candidates who can think for themselves -- not those who are limited to copying solutions from others.
                                        p(class="code__text") On #2, it's difficult to code directly: FizzBuzz does not fall into the common pattern of
                                        p(class="blockquote blockquote--center")
                                            code if 1 then A 
                                                <br> else if 2 then B
                                                <br> else if 3 then C
                                                <br> else/otherwise D
                                        p(class="code__text") Maybe there's no simple and satisfying solution to the code structuring issue, but let me introduce my own solution in JavaScript. You can choose «Fizz» and «Buzz» numbers manualy.

                                    div(class="code__form")
                                        p(class="code__row code__row--grid")
                                            label(class="code__label" for="inputFizz") Enter «Fizz» number:
                                            input(class="code__input code__input--fizz" id="inputFizz" type="number" name="fizz" value="3" min="1" max="100" autocomplete="off")
                                            
                                        p(class="code__row code__row--grid")
                                            label(class="code__label" for="inputBuzz") Enter «Buzz» number:
                                            input(class="code__input code__input--buzz" id="inputBuzz" type="number" name="buzz" value="5" min="1" max="100" autocomplete="off")
                                        p(class="code__row")
                                            button(class="button-fizzbuzz" type="button" aria-label="Click me if you are ready to start the code") FizzBuzz it!

                                    div(class="code__result result")
                                        div(class="result__grid")

                    +challenge("Canvas Clock", "javascript", "clocks")
                        block challengeClocks
                            +code("Canvas Clock", "clocks")
                                block codeClocks
                                    div(class="code__info")
                                        p(class="code__text") The «Canvas Clock» is course project designed to help students to gain expierence with canvas API. <code class="code-container"> &lt;canvas&gt; </code> is an HTML element which can be used to draw graphics via scripting. For instance, it can be used to draw graphs, combine photos, create different animations. On this page the «clock» shows the example of <code class="code-container"> &lt;canvas&gt; </code> implementation which I learned at courses. 
                                    div(class="code__content") 
                                        canvas(id="clock" width="300px" height="300px" aria-label="Clock built with canvas JS.") Please upgrade your browser. 
                    
                    +challenge("Social Buttons", "animations", "social-buttons")
                        block challengeSocials
                            +code("Social Buttons", "social-buttons")
                                block codeSocials
                                    div(class="code__info") 
                                        p(class="code__text") "CSS Inspiration" is a mini cycle of challenges, in which I'll create various design elements of the user interface. Examples include original animations, unusual transformations, creative elements and etc. All elements can be used for inspiration and modified by yourself. We constantly faced with social media elements on websites and apps, so I decided to create this challenge. The «Social Media Buttons» is a set of various hover effects in different design patterns that implemented on a list of social media links. 
                                    div(class="code__content")
                                        ul(class="social-buttons__list" data-text="Colored design")
                                            +socialButton("facebook", "facebook")
                                            +socialButton("twitter", "twitter")
                                            +socialButton("youtube", "youtube")
                                            +socialButton("vk", "vk")
                                            +socialButton("instagram", "instagram")
                                            +socialButton("telegram", "telegram")
                                            +socialButton("github", "github")
                                            +socialButton("linkedin", "linkedin")
                                            +socialButton("behance", "behance")

                    +challenge("Canvas ball animation", "animations", "canvas-ball")
                        block challengeWizard
                            +code("Canvas ball animation", "canvas-ball")
                                block codeWizard
                                    div(class="code__info")
                                        p(class="code__text") The «Canvas ball animation» is course project designed to help students to gain expierence with canvas API. <code class="code-container"> &lt;canvas&gt; </code> is an HTML element which can be used to draw graphics via scripting. For instance, it can be used to draw graphs, combine photos, create different animations. On this page the «clock» shows the example of <code class="code-container"> &lt;canvas&gt; </code> implementation which I learned at courses. 
                                    div(class="code__content center-flex") 
                                        canvas(id="ball" width="400px" height="400px" aria-label="Ball animation built with canvas JS.") Please upgrade your browser. 
block scripts
    script(src="scripts/scripts.min.js")